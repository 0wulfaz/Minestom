package net.minestom.server.instance.block.states;

import java.lang.Deprecated;
import net.minestom.server.instance.block.Block;
import net.minestom.server.instance.block.BlockAlternative;

/**
 * AUTOGENERATED by BlockGenerator
 */
@Deprecated(
        since = "forever",
        forRemoval = false
)
public final class Grindstone {
    public static void initStates() {
        Block.GRINDSTONE.addBlockAlternative(new BlockAlternative((short) 14825, "face=FLOOR","facing=north"));
        Block.GRINDSTONE.addBlockAlternative(new BlockAlternative((short) 14826, "face=FLOOR","facing=south"));
        Block.GRINDSTONE.addBlockAlternative(new BlockAlternative((short) 14827, "face=FLOOR","facing=west"));
        Block.GRINDSTONE.addBlockAlternative(new BlockAlternative((short) 14828, "face=FLOOR","facing=east"));
        Block.GRINDSTONE.addBlockAlternative(new BlockAlternative((short) 14829, "face=WALL","facing=north"));
        Block.GRINDSTONE.addBlockAlternative(new BlockAlternative((short) 14830, "face=WALL","facing=south"));
        Block.GRINDSTONE.addBlockAlternative(new BlockAlternative((short) 14831, "face=WALL","facing=west"));
        Block.GRINDSTONE.addBlockAlternative(new BlockAlternative((short) 14832, "face=WALL","facing=east"));
        Block.GRINDSTONE.addBlockAlternative(new BlockAlternative((short) 14833, "face=CEILING","facing=north"));
        Block.GRINDSTONE.addBlockAlternative(new BlockAlternative((short) 14834, "face=CEILING","facing=south"));
        Block.GRINDSTONE.addBlockAlternative(new BlockAlternative((short) 14835, "face=CEILING","facing=west"));
        Block.GRINDSTONE.addBlockAlternative(new BlockAlternative((short) 14836, "face=CEILING","facing=east"));
    }
}
