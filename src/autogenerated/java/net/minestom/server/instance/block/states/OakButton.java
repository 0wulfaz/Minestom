package net.minestom.server.instance.block.states;

import java.lang.Deprecated;
import net.minestom.server.instance.block.Block;
import net.minestom.server.instance.block.BlockAlternative;

/**
 * AUTOGENERATED by BlockGenerator
 */
@Deprecated(
        since = "forever",
        forRemoval = false
)
public final class OakButton {
    public static void initStates() {
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6350, "face=FLOOR","facing=north","powered=true"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6351, "face=FLOOR","facing=north","powered=false"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6352, "face=FLOOR","facing=south","powered=true"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6353, "face=FLOOR","facing=south","powered=false"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6354, "face=FLOOR","facing=west","powered=true"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6355, "face=FLOOR","facing=west","powered=false"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6356, "face=FLOOR","facing=east","powered=true"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6357, "face=FLOOR","facing=east","powered=false"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6358, "face=WALL","facing=north","powered=true"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6359, "face=WALL","facing=north","powered=false"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6360, "face=WALL","facing=south","powered=true"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6361, "face=WALL","facing=south","powered=false"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6362, "face=WALL","facing=west","powered=true"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6363, "face=WALL","facing=west","powered=false"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6364, "face=WALL","facing=east","powered=true"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6365, "face=WALL","facing=east","powered=false"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6366, "face=CEILING","facing=north","powered=true"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6367, "face=CEILING","facing=north","powered=false"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6368, "face=CEILING","facing=south","powered=true"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6369, "face=CEILING","facing=south","powered=false"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6370, "face=CEILING","facing=west","powered=true"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6371, "face=CEILING","facing=west","powered=false"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6372, "face=CEILING","facing=east","powered=true"));
        Block.OAK_BUTTON.addBlockAlternative(new BlockAlternative((short) 6373, "face=CEILING","facing=east","powered=false"));
    }
}
